@model IEnumerable<Wareh.Models.Item>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="modal-header">
    @ViewContext.RouteData.GetRequiredString("controller")
 
</h2>
<table class="table" id="items">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PurchaseOrder.Product.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PurchaseOrder.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PurchaseOrder.MeasureUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PurchaseOrder.Supplier.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Warehouse.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PurchaseOrder.Product.Name)
                    @if (item.PurchaseOrder.Product.Image != null)
                    {
                        <br>
                        <img src="/@item.PurchaseOrder.Product.Image" class="img-responsive img-thumbnail" style="max-width: 120px" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PurchaseOrder.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PurchaseOrder.MeasureUnit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PurchaseOrder.Supplier.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Warehouse.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    <a href="/@ViewContext.RouteData.GetRequiredString("controller")/Edit/@item.Id" class="btn btn-xs btn-warning">
                        <span class="glyphicon glyphicon-pencil"></span>
                        Edit
                    </a>

                    <a href="/@ViewContext.RouteData.GetRequiredString("controller")/Details/@item.Id" class="btn btn-xs btn-info">
                        <span class="glyphicon glyphicon-info-sign"></span>
                        Details
                    </a>

                    <button data-item-id="@item.Id" class="btn btn-xs btn-danger wareh-delete">
                        <span class="glyphicon glyphicon-trash"></span>
                        Delete
                    </button>
                </td>
                
            </tr>
        }
    </tbody>
    <tfoot>
        <tr><th colspan="1" style="text-align:right" rowspan="1">Total:</th><th rowspan="1" colspan="7"></th></tr>
    </tfoot>
</table>
@section scripts
{
    <script>
        $(document).ready(function () {
            var table = $("#items").DataTable({
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                            i : 0;
                    };

                    // Total over all pages
                    total = api
                        .column(1)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Total over this page
                    pageTotal = api
                        .column(1, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Update footer
                    $(api.column(1).footer()).html(
                        pageTotal
                    );
                }
            });

            $("#items").on("click", ".wareh-delete", function () {
                var button = $(this);
                bootbox.confirm("Are you sure you want to delete this item?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/item/" + button.attr("data-item-id"),
                            method: "DELETE",
                            success: function () {
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                })
            })
        });
    </script>

}